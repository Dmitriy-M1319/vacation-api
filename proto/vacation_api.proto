syntax="proto3";

option go_package = "github.com/Dmitriy-M1319/vacation-api/proto";

// Сервисы для моделей данных
service VacationsService {

  // Получить всех работников вместе с отпусками
  rpc GetAllEmployeers(EmptyResponse) returns (ManyEmployeersResponse);

  // Получить cотрудника по его номеру
  rpc GetEmployeeById(EmployeeId) returns (EmployeeResponse);

  // Добавить нового сотрудника в базу данных
  rpc InsertEmployee(Employee) returns (EmployeeResponse);

  // Обновить данные для сотрудника
  rpc UpdateEmployee(UpdateEmpRequest) returns (EmployeeResponse);

  // Удалить сотрудника из базы данных
  rpc DeleteEmployee(EmployeeId) returns (EmptyResponse);

  // Получить список отпусков для определенного работника
  rpc GetVacationsByEmployee(EmployeeId) returns(ManyVacationsResponse);

  // Получить отпуск по его уникальному идентификатору
  rpc GetVacationById(VacationId) returns (VacationResponse);

  // Добавить новый отпуск для сотрудника в базу данных
  rpc InsertVacation(Vacation) returns (VacationResponse);

  // Обновить данные для отпуска
  rpc UpdateVacation(UpdateVacRequest) returns (VacationResponse);

  // Удалить отпуск сотрудника из базы данных
  rpc DeleteVacation(VacationId) returns (EmptyResponse);

  // Получить все нормы отпуска
  rpc GetAllVacationNorm(EmptyResponse) returns (ManyVacationNormsResponse);

  // Получить норму по его уникальному идентификатору
  rpc GetVacationNormById(VacationNormId) returns (VacationNormResponse);

  // Добавить новый норму отпуска в базу данных
  rpc InsertVacationNorm(VacationNorm) returns (VacationNormResponse);

  // Обновить данные для нормы отпуска
  rpc UpdateVacationNorm(UpdateVacNormRequest) returns (VacationNormResponse);

  // Удалить норму отпуск из базы данных
  rpc DeleteVacationNorm(VacationNormId) returns (EmptyResponse);
}

// Модель единицы отпуска
message Vacation {
  uint64 id = 1;
  uint64 emp_id = 2;
  string start_date = 3;
  string end_date = 4;
  uint64 days_count = 5;
}

// Модель сотрудника
message Employee {
  uint64 id = 1;
  string first_name = 2;
  string last_name = 3;
  string patronymic = 4;
}

// Модель нормы для отпуска по месяцам
message VacationNorm {
  uint64 id = 1;
  string month = 2;
  uint64 vacations_count = 3;
}

message EmptyResponse {
}

message ManyEmployeersResponse {
  repeated Employee employees = 1;
}

message ManyVacationsResponse {
  repeated Vacation vacations = 1;
}

message ManyVacationNormsResponse {
  repeated VacationNorm norms = 1;
}

message VacationId {
  uint64 vac_id = 1;
}

message VacationResponse {
  optional Vacation vac = 1;
}

message EmployeeId {
  uint64 emp_id = 1;
}

message EmployeeResponse {
  optional Employee emp = 1;
}

message VacationNormId {
  uint64 norm_id = 1;
}

message VacationNormResponse {
  optional VacationNorm norm = 1;
}

message UpdateEmpRequest {
  uint64 emp_id = 1;
  Employee emp = 2;
}

message UpdateVacRequest {
  uint64 vac_id = 1;
  Vacation vac = 2;
}

message UpdateVacNormRequest {
  uint64 norm_id = 1;
  VacationNorm norm = 2;
}





