syntax="proto3";
import "google/api/annotations.proto";
package vacation_api.v1;
option go_package = "github.com/Dmitriy-M1319/vacation-api/pkg/vacation_api;vacation_api";
import "protoc-gen-openapiv2/options/annotations.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
      title: "Vacations Service";
      version: "v1.0";
  };

  schemes: HTTP;
  schemes: HTTPS;
  consumes: "application/json";
  produces: "application/json";
};

// Сервисы для моделей данных
service VacationsService {

  // Получить всех работников вместе с отпусками
  rpc GetAllEmployeers(EmptyResponse) returns (ManyEmployeersResponse) {
    option (google.api.http) = {
      get: "/v1/employees"
    };
  }

  // Получить cотрудника по его номеру
  rpc GetEmployeeById(EmployeeId) returns (EmployeeResponse) {
    option (google.api.http) = {
      get: "/v1/employees/{id}"
    };
  }

  // Добавить нового сотрудника в базу данных
  rpc InsertEmployee(Employee) returns (EmployeeResponse) {
    option (google.api.http) = {
      post: "/v1/employees"
      body: "*"
    };
  }

  // Обновить данные для сотрудника
  rpc UpdateEmployee(UpdateEmpRequest) returns (EmployeeResponse) {
    option (google.api.http) = {
      put: "/v1/employees/{id}"
      body: "*"
    };
  }

  // Удалить сотрудника из базы данных
  rpc DeleteEmployee(EmployeeId) returns (EmptyResponse) {
    option (google.api.http) = {
      delete: "/v1/employees/{id}"
    };
  }

  // Получить весь список отпусков сотрудников
  rpc GetAllVacations(EmptyResponse) returns (ManyVacationsResponse) {
    option (google.api.http) = {
      get: "/v1/vacations"
    };
  }

  // Получить список отпусков для определенного работника
  rpc GetVacationsByEmployee(EmployeeId) returns (ManyVacationsResponse) {
    option (google.api.http) = {
      get: "/v1/employees/{id}/vacations"
    };
  }

  // Получить отпуск по его уникальному идентификатору
  rpc GetVacationById(VacationId) returns (VacationResponse) {
    option (google.api.http) = {
      get: "/v1/vacations/{id}"
    };
  }

  // Добавить новый отпуск для сотрудника в базу данных
  rpc InsertVacation(Vacation) returns (VacationResponse) {
    option (google.api.http) = {
      post: "/v1/vacations"
      body: "*"
    };
  }

  // Обновить данные для отпуска
  rpc UpdateVacation(UpdateVacRequest) returns (VacationResponse) {
    option (google.api.http) = {
      put: "/v1/vacations/{id}"
      body: "*"
    };
  }

  // Удалить отпуск сотрудника из базы данных
  rpc DeleteVacation(VacationId) returns (EmptyResponse) {
    option (google.api.http) = {
      delete: "/v1/vacations/{id}"
    };
  }

  // Получить все нормы отпуска
  rpc GetAllVacationNorms(EmptyResponse) returns (ManyVacationNormsResponse) {
    option (google.api.http) = {
      get: "/v1/norms"
    };
  }

  // Получить норму по его уникальному идентификатору
  rpc GetVacationNormById(VacationNormId) returns (VacationNormResponse) {
    option (google.api.http) = {
      get: "/v1/norms/{id}"
    };
  }

  // Добавить новый норму отпуска в базу данных
  rpc InsertVacationNorm(VacationNorm) returns (VacationNormResponse) {
    option (google.api.http) = {
      post: "/v1/norms"
      body: "*"
    };
  }

  // Обновить данные для нормы отпуска
  rpc UpdateVacationNorm(UpdateVacNormRequest) returns (VacationNormResponse) {
    option (google.api.http) = {
      put: "/v1/norms/{id}"
      body: "*"
    };
  }
  
  // Удалить норму отпуск из базы данных
  rpc DeleteVacationNorm(VacationNormId) returns (EmptyResponse) {
    option (google.api.http) = {
      delete: "/v1/norms/{id}"
    };
  }
}

// VacationDto
message Vacation {
  uint64 id = 1;
  uint64 emp_id = 2;
  string start_date = 3;
  string end_date = 4;
  uint64 days_count = 5;
}

// EmployeeDto
message Employee {
  uint64 id = 1;
  string first_name = 2;
  string last_name = 3;
  string patronymic = 4;
}

// VacationNormDto
message VacationNorm {
  uint64 id = 1;
  string month = 2;
  uint64 vacations_count = 3;
}

// EmptyResponseDto
message EmptyResponse {
}

// EmployeesDto
message ManyEmployeersResponse {
  repeated Employee employees = 1;
}

// VacationsDto
message ManyVacationsResponse {
  repeated Vacation vacations = 1;
}

// VacationNormsDto
message ManyVacationNormsResponse {
  repeated VacationNorm norms = 1;
}

// VacationId
message VacationId {
  uint64 id = 1;
}

// VacationResponse
message VacationResponse {
  Vacation vac = 1;
}

// EmployeeId
message EmployeeId {
  uint64 id = 1;
}

// EmployeeResponse
message EmployeeResponse {
  Employee emp = 1;
}

// VacationNormId
message VacationNormId {
  uint64 id = 1;
}

// VacationNormResponse
message VacationNormResponse {
  VacationNorm norm = 1;
}

message UpdateEmpRequest {
  uint64 id = 1;
  Employee emp = 2;
}

message UpdateVacRequest {
  uint64 id = 1;
  Vacation vac = 2;
}

message UpdateVacNormRequest {
  uint64 id = 1;
  VacationNorm norm = 2;
}





